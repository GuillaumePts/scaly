const nodemailer = require('nodemailer');

const transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
        user: process.env.GMAIL_USER,
        pass: process.env.GMAIL_PASS,
    },
});

/**
 * Envoie des mails au photographe et √† son client final selon l‚Äô√©tat du paiement.
 * @param {string} mailPhotographe - Email du photographe client
 * @param {string} mailClientFinal - Email du client final (acheteur)
 * @param {boolean} paiementReussi - True si paiement r√©ussi, false sinon
 * @returns {Promise<{success: boolean, errors: any[]}>}
 */
async function sendMailTicket(mailPhotographe, mailClientFinal, paiementReussi) {
    const errors = [];

    // Messages pour succ√®s
    const sujetPhotographeOk = 'Paiement r√©ussi !';
    const messagePhotographeOk = `
    Bonjour,
    <br><br>
    Nous vous informons que le paiement de votre client a √©t√© valid√© avec succ√®s.
    <br>
    Merci de votre confiance pour utiliser Scaly Pic‚Äôs. Nous restons √† votre disposition pour toute assistance.
    <br><br>
    Bien cordialement,<br>
    L‚Äô√©quipe Scaly Pic‚Äôs
  `;

    const sujetClientOk = 'Merci pour votre achat !';
    const messageClientOk = `
    Bonjour,
    <br><br>
    Votre paiement a bien √©t√© pris en compte. Vous pouvez d√®s √† pr√©sent acc√©der aux photos haute d√©finition de votre s√©ance.
    <br>
    Merci de faire confiance √† votre photographe pour immortaliser ces moments pr√©cieux.
    <br><br>
    Cordialement,<br>
    L‚Äô√©quipe Scaly Pic‚Äôs
`;


    // Messages pour √©chec
    const sujetPhotographeFail = '√âchec du paiement de votre client';
    const messagePhotographeFail = (mailClientFinal) => `
    Bonjour,
    <br><br>
    Le paiement li√© √† votre ticket n‚Äôa malheureusement pas pu √™tre valid√©.
    <br>
    Ce probl√®me peut √™tre d√ª √† une mauvaise configuration de votre compte Stripe Connect. 
    Nous vous recommandons de v√©rifier votre dashboard Stripe pour vous assurer que tout est correctement configur√©.
    <br>
    Par ailleurs, vous pouvez √©galement contacter directement votre client √† l‚Äôadresse suivante : <a href="mailto:${mailClientFinal}">${mailClientFinal}</a> afin de clarifier la situation.
    <br><br>
    Si vous constatez que le probl√®me ne vient ni de votre compte ni de votre client, il est possible qu‚Äôil provienne de notre site.
    Dans ce cas, n‚Äôh√©sitez pas √† nous contacter via notre page de contact pour que nous puissions vous assister rapidement.
    <br><br>
    Bien cordialement,<br>
    L‚Äô√©quipe Scaly Pic‚Äôs
`;

    const sujetClientFail = 'Probl√®me lors de votre paiement sur Scaly Pic‚Äôs';
    const messageClientFail = (mailPhotographe) => `
    Bonjour,
    <br><br>
    Nous avons rencontr√© un probl√®me lors de la validation de votre paiement.
    <br>
    Merci de r√©essayer ou de contacter directement votre photographe √† l‚Äôadresse suivante : <a href="mailto:${mailPhotographe}">${mailPhotographe}</a> pour plus d‚Äôinformations.
    <br><br>
    Cordialement,<br>
    L‚Äô√©quipe Scaly Pic‚Äôs
`;

    try {
        await transporter.sendMail({
            from: `"Scaly Pic‚Äôs" <${process.env.GMAIL_USER}>`,
            to: mailPhotographe,
            subject: paiementReussi ? sujetPhotographeOk : sujetPhotographeFail,
            text: paiementReussi ? messagePhotographeOk.replace(/<br>/g, '\n') : messagePhotographeFail.replace(/<br>/g, '\n'),
            html: paiementReussi ? messagePhotographeOk : messagePhotographeFail,
        });
        console.log(`üì© Mail envoy√© au photographe (${mailPhotographe})`);
    } catch (err) {
        console.error(`‚ùå Erreur envoi mail photographe :`, err);
        errors.push({ type: 'photographe', error: err });
    }

    try {
        await transporter.sendMail({
            from: `"Scaly Pic‚Äôs" <${process.env.GMAIL_USER}>`,
            to: mailClientFinal,
            subject: paiementReussi ? sujetClientOk : sujetClientFail,
            text: paiementReussi ? messageClientOk.replace(/<br>/g, '\n') : messageClientFail.replace(/<br>/g, '\n'),
            html: paiementReussi ? messageClientOk : messageClientFail,
        });
        console.log(`üì© Mail envoy√© au client final (${mailClientFinal})`);
    } catch (err) {
        console.error(`‚ùå Erreur envoi mail client final :`, err);
        errors.push({ type: 'client', error: err });
    }

    return {
        success: errors.length === 0,
        errors,
    };
}


module.exports = sendMailTicket;